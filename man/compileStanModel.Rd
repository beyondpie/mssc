% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stanUtils.R
\name{compileStanModel}
\alias{compileStanModel}
\title{Compile stan model with cmdstanr}
\usage{
compileStanModel(
  model_path,
  use_thread = NULL,
  use_mpi = NULL,
  use_opencl = NULL
)
}
\arguments{
\item{model_path}{string, stan script}

\item{use_thread}{bool/NULL, when reduce_sum or map_rect in script, set it as TRUE.
When running, remember to export STAN_NUM_THREADS=4. Default is NULL.}

\item{use_mpi}{bool/NULL, when map_rect in script, set it as TRUE. Deault is NULL.}

\item{use_opencl}{bool/NUYLL, enable the OpenCL backend. Deault is NULL.
When set is as TRUE, remember to set STAN_OPENCL=true when compiling.
https://mc-stan.org/docs/2_26/cmdstan-guide/parallelization.html
\itemize{
\item The Stan model compiled with STAN_OPENCL can also be supplied the
OpenCL platform and device IDs of the target device. These IDs
determine the device on which to run the OpenCL-supported functions
on. You can list the devices on your system using the clinfo
program. If the system has one GPU and no OpenCL CPU runtime, the
platform and device IDs of the GPU are typically 0. In that case you
can also omit the OpenCL IDs as the default 0 IDs are used in that
case.
We supply these IDs when starting the executable as shown below:
path/to/model sample data file=data.json opencl platform=0 device=1
}

NOTE\link{BUG}:  use_xxx = NULL when we don't want to use them.
When I set them as FALSE, they still treat them as TRUE.}
}
\value{
compiled stan model
}
\description{
NOTE previous name: init_stan_model
}
